<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='world data_2' inline='true' name='textscan.42115.580059236112' version='8.3'>
      <connection class='textscan' directory='C:/Users/willieman/Desktop/Skool/College Homework/_Senior Year/Spring 2015/CS 329e/DataVisualization/DV_TableauProject3/00 Doc' filename='world data_2.csv'>
        <relation name='world data_2#csv' table='[world data_2#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='Arable-percent' ordinal='2' />
            <column datatype='real' name='Crops-percent' ordinal='3' />
            <column datatype='real' name='Other-percent' ordinal='4' />
            <column datatype='real' name='Climate' ordinal='5' />
            <column datatype='real' name='Birthrate' ordinal='6' />
            <column datatype='real' name='Deathrate' ordinal='7' />
            <column datatype='real' name='Agriculture' ordinal='8' />
            <column datatype='real' name='Industry' ordinal='9' />
            <column datatype='real' name='Service' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arable-percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Arable-percent]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Arable-percent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crops-percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crops-percent]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Crops-percent</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other-percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other-percent]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Other-percent</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Climate]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Climate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthrate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birthrate]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Birthrate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deathrate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deathrate]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Deathrate</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Agriculture]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Agriculture</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Service]</local-name>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias>Service</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[world data_2#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Population Growth' datatype='real' name='[Calculation_0590421143219167]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Birthrate] )-SUM([Deathrate] )' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='world data' inline='true' name='textscan.42115.579460775465' version='8.3'>
      <connection class='textscan' directory='C:/Users/willieman/Desktop/Skool/College Homework/_Senior Year/Spring 2015/CS 329e/DataVisualization/DV_TableauProject3/00 Doc' filename='world data.csv'>
        <relation name='world data#csv' table='[world data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Areasqmi' ordinal='3' />
            <column datatype='real' name='PopDensitypersqmi' ordinal='4' />
            <column datatype='real' name='Coastline coast-area ratio' ordinal='5' />
            <column datatype='real' name='Netmigration' ordinal='6' />
            <column datatype='real' name='Infantmortalityper1000births' ordinal='7' />
            <column datatype='integer' name='GDP-percapita' ordinal='8' />
            <column datatype='real' name='LiteracyPercent' ordinal='9' />
            <column datatype='real' name='Phonesper1000' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Areasqmi</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Areasqmi]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Areasqmi</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopDensitypersqmi</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PopDensitypersqmi]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>PopDensitypersqmi</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coastline coast-area ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coastline coast-area ratio]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Coastline coast-area ratio</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Netmigration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Netmigration]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Netmigration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infantmortalityper1000births</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infantmortalityper1000births]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Infantmortalityper1000births</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP-percapita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP-percapita]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>GDP-percapita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LiteracyPercent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LiteracyPercent]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>LiteracyPercent</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phonesper1000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Phonesper1000]</local-name>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias>Phonesper1000</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[world data#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Literacy Percent' datatype='real' name='[LiteracyPercent]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pop Densitypersqmi' datatype='real' name='[PopDensitypersqmi]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Deathrate affect immigration?'>
      <table>
        <view>
          <datasources>
            <datasource caption='world data_2' name='textscan.42115.580059236112' />
            <datasource caption='world data' name='textscan.42115.579460775465' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42115.579460775465'>
            <column datatype='real' name='[Netmigration]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Netmigration]' derivation='Sum' name='[sum:Netmigration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42115.580059236112'>
            <column datatype='real' name='[Deathrate]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deathrate]' derivation='Sum' name='[sum:Deathrate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.42115.579460775465].[sum:Population:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42115.579460775465].[sum:Population:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.42115.579460775465].[sum:Population:qk]' field-type='quantitative' max='1004557571' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.42115.580059236112].[sum:Deathrate:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42115.579460775465].[sum:Netmigration:qk]' />
              <size column='[textscan.42115.580059236112].[sum:Deathrate:qk]' />
              <text column='[textscan.42115.579460775465].[sum:Population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8525925874710083' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42115.579460775465].[sum:Population:qk]</rows>
        <cols>[textscan.42115.580059236112].[none:Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Does GDP affect population growth?'>
      <table>
        <view>
          <datasources>
            <datasource caption='world data_2' name='textscan.42115.580059236112' />
            <datasource caption='world data' name='textscan.42115.579460775465' />
          </datasources>
          <datasource-dependencies datasource='textscan.42115.579460775465'>
            <column datatype='integer' name='[GDP-percapita]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[GDP-percapita]' derivation='Sum' name='[sum:GDP-percapita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42115.580059236112'>
            <column caption='Population Growth' datatype='real' name='[Calculation_0590421143219167]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Birthrate] )-SUM([Deathrate] )' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0590421143219167]' derivation='User' name='[usr:Calculation_0590421143219167:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42115.580059236112].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Congo, Dem. Rep. &quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Korea, South &quot;</bucket>
              <bucket>&quot;Burma&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Bosnia &amp; Herzegovina&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Central African Rep.&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Congo, Repub. of the &quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Gambia, The &quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Trinidad &amp; Tobago&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Macau&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Bahamas, The &quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Sao Tome &amp; Principe&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Micronesia, Fed. St. &quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Antigua &amp; Barbuda&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]' />
              <text column='[textscan.42115.579460775465].[sum:GDP-percapita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42115.580059236112].[none:Country:nk]</rows>
        <cols>[textscan.42115.579460775465].[sum:Population:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population density'>
      <table>
        <view>
          <datasources>
            <datasource caption='world data_2' name='textscan.42115.580059236112' />
            <datasource caption='world data' name='textscan.42115.579460775465' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42115.579460775465'>
            <column caption='Pop Densitypersqmi' datatype='real' name='[PopDensitypersqmi]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[PopDensitypersqmi]' derivation='Sum' name='[sum:PopDensitypersqmi:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42115.580059236112'>
            <column caption='Population Growth' datatype='real' name='[Calculation_0590421143219167]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Birthrate] )-SUM([Deathrate] )' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_0590421143219167]' derivation='User' name='[usr:Calculation_0590421143219167:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[textscan.42115.579460775465].[sum:PopDensitypersqmi:qk]' included-values='in-range'>
            <min>522.0</min>
            <max>16183.0</max>
          </filter>
          <slices>
            <column>[textscan.42115.579460775465].[sum:PopDensitypersqmi:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42115.580059236112].[Longitude (generated)]' field-type='quantitative' max='16685361.263346337' min='-10635517.710621236' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42115.580059236112].[Latitude (generated)]' field-type='quantitative' max='8684018.8294818439' min='-8684018.8294818588' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='8091.5' field='[textscan.42115.579460775465].[sum:PopDensitypersqmi:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0080ff</color>
                <color>#298ff6</color>
                <color>#4f9eed</color>
                <color>#72abe4</color>
                <color>#92b7db</color>
                <color>#afc1d2</color>
                <color>#cacaca</color>
                <color>#cfb4b4</color>
                <color>#d49e9e</color>
                <color>#d98686</color>
                <color>#de6d6d</color>
                <color>#e35252</color>
                <color>#e83737</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[textscan.42115.579460775465].[sum:PopDensitypersqmi:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='quantsize' />
            <encoding attr='color' field='[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]' num-steps='3' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]' />
              <size column='[textscan.42115.579460775465].[sum:PopDensitypersqmi:qk]' />
              <text column='[textscan.42115.580059236112].[none:Country:nk]' />
              <text column='[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42115.580059236112].[Latitude (generated)]</rows>
        <cols>[textscan.42115.580059236112].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Relation between Population and Birthrate among different Regions'>
      <table>
        <view>
          <datasources>
            <datasource caption='world data' name='textscan.42115.579460775465' />
            <datasource caption='world data_2' name='textscan.42115.580059236112' />
          </datasources>
          <datasource-dependencies datasource='textscan.42115.579460775465'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42115.580059236112'>
            <column datatype='real' name='[Birthrate]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Birthrate]' derivation='Sum' name='[sum:Birthrate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42115.579460775465].[none:Region:nk]'>
            <groupfilter from='&quot;BALTICS&quot;' function='range' level='[none:Region:nk]' to='&quot;WESTERN EUROPE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42115.579460775465].[none:Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42115.580059236112].[sum:Birthrate:qk]' palette='tableau-orange-white-blue' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42115.580059236112].[sum:Birthrate:qk]' />
            </encodings>
            <reference-line axis-column='[textscan.42115.579460775465].[sum:Population:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' formula='average' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[textscan.42115.579460775465].[sum:Population:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42115.579460775465].[sum:Population:qk]</rows>
        <cols>[textscan.42115.579460775465].[none:Region:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Population density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]' type='color' />
            <card pane-specification-id='2' param='[textscan.42115.579460775465].[sum:PopDensitypersqmi:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42115.579460775465].[sum:PopDensitypersqmi:qk]' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42115.579460775465].[none:Country:nk]</field>
          <field>[textscan.42115.580059236112].[none:Country:nk]</field>
          <field>[textscan.42115.580059236112].[none:Region:nk]</field>
          <field>[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Does GDP affect population growth?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42115.580059236112].[none:Country:nk]</field>
          <field>[textscan.42115.580059236112].[usr:Calculation_0590421143219167:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Deathrate affect immigration?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.42115.579460775465].[sum:Netmigration:qk]' type='color' />
            <card pane-specification-id='2' param='[textscan.42115.580059236112].[sum:Deathrate:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42115.579460775465].[none:Country:nk]</field>
          <field>[textscan.42115.579460775465].[sum:Netmigration:qk]</field>
          <field>[textscan.42115.580059236112].[none:Climate:qk]</field>
          <field>[textscan.42115.580059236112].[none:Country:nk]</field>
          <field>[textscan.42115.580059236112].[none:Region:nk]</field>
          <field>[textscan.42115.580059236112].[none:Service:qk]</field>
          <field>[textscan.42115.580059236112].[sum:Birthrate:qk]</field>
          <field>[textscan.42115.580059236112].[sum:Industry:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Relation between Population and Birthrate among different Regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42115.580059236112].[sum:Birthrate:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42115.579460775465].[none:Region:nk]</field>
          <field>[textscan.42115.580059236112].[none:Country:nk]</field>
          <field>[textscan.42115.580059236112].[none:Region:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Population density' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAZNElEQVR4nO2dSXLrOhJFUxIlyl5ETf/+l/OntYMa2FavGrw41GUKAKHG3UPeCIfVUOiY
      fSbA2b///nvu+94CgZaw3W7tn3/+mXXr9dr+85//fPd4AoEvxX//+18zM5t/8zgCgW9FMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECg
      aQQDBJpGMECgaQQDBJpGMECgaQQDBJpGMECgaXTfPYBHcD6fs9/NZrMvHEngt+JXM4CZ2fF4
      tNPpNLyfzWa2WCyCAQJV+HUMcD6f7XQ62el0svP5bLvdbsQEXddZ3/c2n89tPp/bbDYLZghk
      8eMZQAne7I+E3+12ttvt7Hw+D9/z+ng82uFwsMViYS8vL6ENAkU8zABqh0OE5/P5YemrbW02
      G9vv94NUR+LTt/YDQ5iZ7fd7WywWD84w8DfjLgZQ4uTPzOxwONjhcLDT6WTr9dq67tI8RFrD
      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
    </thumbnail>
    <thumbnail height='192' name='Does GDP affect population growth?' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Deathrate affect immigration?' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Relation between Population and Birthrate among different Regions' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
